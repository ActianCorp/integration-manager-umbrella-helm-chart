# ---- Integration Manager ----
# https://github.com/ActianCorp/integration-manager-helm-chart
integration-manager:
  enabled: true
  # Credentials can be managed via
  # https://kubernetes.io/docs/concepts/configuration/secret/
  imagePullSecrets:
    - dockerhub-actian-registrykey
  prometheus:
    operator:
      enabled: false
  ingress:
    enabled: true
    annotations:
      # Will filter different API requests to the appropriate pods. If you only have
      # a single integration manager pod running, this should be disabled
      nginx.ingress.kubernetes.io/use-regex: "true"
      kubernetes.io/ingress.class: nginx
    # Not specifying hostName to allow rules to apply to all incoming traffic through NGINX
    hostName:
  # This must be the IP & port where NGINX will be available
  imBaseUrl: http://localhost:8080
  destinationId: 1
  datasource:
    url: jdbc:mysql://mysql:3306/db
    username: user
    password: password
  amqp:
    host: integration-manager-rabbitmq
    username: user
    password: password
  # File storage settings for in-cluster minio
  repository:
    storageType: aws
    sourceBucket: repository
    sourcePrefix: datacloud
    targetBucket: execution
    targetPrefix: ""
    jobTemplateDir: /product
    jobConfigDir: /provisioning
  extraConfig: |
    # path-style-access is required for minio ingress to route properly when running in k8s
    repository.aws.path-style-access-enabled=true
    logging.level.com.actian.datacloud=DEBUG
  staticContent:
    nginxConf: |
      server {

        listen      8080;
        root        /usr/share/nginx/html;

        location /apidocs {
        try_files $uri /apidocs/index.html;
        }

        location / {
        try_files $uri /dx/index.html;
        }

        location /ui {
        try_files $uri /ui/index.html;
        }    

        location /dx {
        try_files $uri /dx/index.html;
        }

        location /dx/404 {
        try_files $uri /dx/index.html;
        }

        location /im {
        try_files $uri /im/index.html;
        }
      }
    replicaCount: 1
    isIMOnPrem: true
    ingress:
      host: localhost
    appConfig: |
      {
        "isCloud": false,
      }
    aopAppConfig: |
      {
        "isProdEnv": false,
        "isIMOnPrem": true,
        "rootPath": true,
        "isCloud": false,
      }
# ---- Integration Manager Worker ----
# https://github.com/ActianCorp/integration-manager-worker-helm-chart
integration-manager-worker:
  enabled: true
  imagePullSecrets:
    - dockerhub-actian-registrykey
  replicaCount: 1
  resources: {}
  destinationId: 1
  amqp:
    host: integration-manager-rabbitmq
    username: guest
    password: password
  extraConfig: |
    logging.level.org.springframework.amqp.rabbit.core=DEBUG
    logging.level.com.actian.datacloud=DEBUG
  extraVolumes:
    - name: "enginelog"
      hostPath:
        path: "/var/log/Actian/local/work/job"
        type: ""
    - name: "secret-volume"
      hostPath:
        path: "/etc/secret"
        type: ""
  license:
  # Example:
  # license: |
  #   <my-license-contents>

# ---- Liquibase ----
# This runs a docker image that contains liquibase scripts to bootstrap the database
liquibase:
  enabled: true
  imagePullSecrets:
    - dockerhub-actian-registrykey

# ---- NGINX-Ingress ----
# https://github.com/bitnami/charts/tree/master/bitnami/nginx
ingress-nginx:
  enabled: true
  kind: Deployment
  replicas: 1
  controller:
    service:
      type: ClusterIP
      omitClusterIP: true

# ---- RabbitMQ ----
# https://github.com/bitnami/charts/tree/master/bitnami/rabbitmq
rabbitmq:
  enabled: true
  forceBoot: true
  prometheus:
    operator:
      enabled: false
  replicaCount: 1
  auth:
    erlangCookie: A90LtNydMy8Ff2nqi6kPhtj13pAUxo0h
    username: guest
    password: password
  persistence:
    # Explicitly disabled for demo purposes & ease of configurability
    enabled: true
  resources: {}

# ---- MySQL ----
# https://github.com/bitnami/charts/tree/master/bitnami/mysql
mysql:
  enabled: true
  auth:
    username: user
    password: password
    database: db
    rootPassword: password
#  # MySQL Crashes if a pod with a name that's too long connects: # https://www.digitalocean.com/community/questions/mysql-crashes-when-my-pods-connects
#  configurationFiles:
#    mysql.cnf: |-
#      [mysqld]
#      skip-host-cache
#      skip-name-resolve
  primary:
    persistence:
      enabled: true
  secondary:
    replicaCount: 0

# ---- MinIO ----
# https://github.com/bitnami/charts/tree/master/bitnami/minio
minio:
  enabled: true
  mode: standalone
  auth:
    rootUser: AKIAIOSFODNN7EXAMPLE
    rootPassword: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
  persistence:
    enabled: true
  defaultBuckets: "repository,execution"
  resources: {}
